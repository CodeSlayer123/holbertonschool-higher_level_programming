Importing function from module:
    >>> add_integer = __import__('0-add_integer').add_integer


Adding pos ints:
    >>> add_integer(5,5)
    10

Adding neg int:
    >>> add_integer(-5, -5)
    -10

Adding strings:
    >>> add_integer("Hello", "World")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding string to int:
    >>> add_integer(5, "World")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Adding None:
    >>> add_integer(None,5)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding Nones:
    >>> add_integer(None, None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding empty:
    >>> add_integer("")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding empties:
    >>> add_integer("", "")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Adding Float Overflows:
    >>> add_integer(21474836402147483640.21474836402147483640, 21474836402147483640.21474836402147483640)
    42949672804294967296

Adding NaN:
    >>> add_integer(float("NaN"), 42)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Adding one ints:
    >>> add_integer(5)
    103

Adding no arguments:
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Infinity and beyond:
    >>> add_integer(float('inf'), 42)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
